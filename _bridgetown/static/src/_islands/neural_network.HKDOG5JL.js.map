{
  "version": 3,
  "sources": ["../../../../../src/_data/wiki_datasets.json", "../../../../../src/_islands/neural_network.js"],
  "sourcesContent": ["{\n  \"nodes\": [\n    {\n      \"id\": \"quarterly/2023-Q3\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"workbench/cheatsheet\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"mastodon/recommendations\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"archive\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"quarterly/2023-Q1\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"quarterly/2023-Q2\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"appendix/excelcon-2nd\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"appendix\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"rfc\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"rfc/2616\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"projects/neural-bridge\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"mastodon\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/flutter-tools.nvim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"flutter\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"tmuxinator\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"digital-garden\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/telekasten.nvim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"prompt-engineering\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/mind.nvim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"improving-productivity\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"cli/diff\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"cli\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"wezterm\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"tmux\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"dogfooding-driven-development\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"neovim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"workbench\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/telescope.nvim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/nvim-treesitter-context\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/vim-fugitive\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/vim-gitgutter\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"vim-plugin/octo.nvim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"symbol\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"Neovim\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"daily/2023-01-19\",\n      \"group\": 1\n    },\n    {\n      \"id\": \"#archive\",\n      \"group\": 2,\n      \"fx\": -73.98267743385807,\n      \"fy\": 67.77419285757288\n    },\n    {\n      \"id\": \"#productivity\",\n      \"group\": 2,\n      \"fx\": 8.793047737395423,\n      \"fy\": -100.19224370508499\n    },\n    {\n      \"id\": \"#vim\",\n      \"group\": 2,\n      \"fx\": 61.29738964898668,\n      \"fy\": 79.9515902047973\n    },\n    {\n      \"id\": \"#cli\",\n      \"group\": 2,\n      \"fx\": -99.33978419647497,\n      \"fy\": -17.57180907912445\n    },\n    {\n      \"id\": \"#project\",\n      \"group\": 2,\n      \"fx\": 85.21928477605212,\n      \"fy\": -54.2095333152586\n    }\n  ],\n  \"links\": [\n    {\n      \"source\": \"#archive\",\n      \"target\": \"quarterly/2023-Q3\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#productivity\",\n      \"target\": \"workbench/cheatsheet\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#archive\",\n      \"target\": \"archive\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"archive\",\n      \"target\": \"quarterly/2023-Q1\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"archive\",\n      \"target\": \"quarterly/2023-Q2\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"archive\",\n      \"target\": \"quarterly/2023-Q3\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#archive\",\n      \"target\": \"quarterly/2023-Q2\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"quarterly/2023-Q2\",\n      \"target\": \"appendix/excelcon-2nd\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#archive\",\n      \"target\": \"appendix/excelcon-2nd\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#productivity\",\n      \"target\": \"appendix/excelcon-2nd\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#vim\",\n      \"target\": \"appendix/excelcon-2nd\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#archive\",\n      \"target\": \"appendix\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"appendix\",\n      \"target\": \"appendix/excelcon-2nd\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"rfc\",\n      \"target\": \"rfc/2616\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#archive\",\n      \"target\": \"quarterly/2023-Q1\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"quarterly/2023-Q1\",\n      \"target\": \"projects/neural-bridge\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"mastodon\",\n      \"target\": \"mastodon/recommendations\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#vim\",\n      \"target\": \"vim-plugin/flutter-tools.nvim\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"vim-plugin/flutter-tools.nvim\",\n      \"target\": \"flutter\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin/flutter-tools.nvim\",\n      \"target\": \"tmuxinator\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"digital-garden\",\n      \"target\": \"projects/neural-bridge\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"digital-garden\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#productivity\",\n      \"target\": \"improving-productivity\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"improving-productivity\",\n      \"target\": \"tmuxinator\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"improving-productivity\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"improving-productivity\",\n      \"target\": \"vim-plugin/mind.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"improving-productivity\",\n      \"target\": \"prompt-engineering\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#cli\",\n      \"target\": \"cli/diff\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#cli\",\n      \"target\": \"cli\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"cli\",\n      \"target\": \"cli/diff\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"cli\",\n      \"target\": \"wezterm\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"cli\",\n      \"target\": \"tmux\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"cli\",\n      \"target\": \"tmuxinator\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"dogfooding-driven-development\",\n      \"target\": \"projects/neural-bridge\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"dogfooding-driven-development\",\n      \"target\": \"neovim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#productivity\",\n      \"target\": \"workbench\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"workbench\",\n      \"target\": \"wezterm\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"workbench\",\n      \"target\": \"neovim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"workbench\",\n      \"target\": \"vim-plugin\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"workbench\",\n      \"target\": \"tmuxinator\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"workbench\",\n      \"target\": \"workbench/cheatsheet\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#cli\",\n      \"target\": \"wezterm\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#productivity\",\n      \"target\": \"wezterm\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#vim\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"vim-plugin/telekasten.nvim\",\n      \"target\": \"vim-plugin/telescope.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"neovim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/flutter-tools.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/nvim-treesitter-context\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/vim-fugitive\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/vim-gitgutter\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/octo.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"vim-plugin\",\n      \"target\": \"vim-plugin/mind.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"#cli\",\n      \"target\": \"tmuxinator\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#productivity\",\n      \"target\": \"tmuxinator\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#cli\",\n      \"target\": \"neovim\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"#project\",\n      \"target\": \"projects/neural-bridge\",\n      \"value\": 100\n    },\n    {\n      \"source\": \"projects/neural-bridge\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"projects/neural-bridge\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"projects/neural-bridge\",\n      \"target\": \"vim-plugin/telekasten.nvim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"projects/neural-bridge\",\n      \"target\": \"wezterm\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"projects/neural-bridge\",\n      \"target\": \"tmuxinator\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"projects/neural-bridge\",\n      \"target\": \"Neovim\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"daily/2023-01-19\",\n      \"target\": \"projects/neural-bridge\",\n      \"value\": 1\n    },\n    {\n      \"source\": \"daily/2023-01-19\",\n      \"target\": \"projects/neural-bridge\",\n      \"value\": 1\n    }\n  ]\n}", "import dataset from \"../_data/wiki_datasets.json\"\n\nclass NeuralNetwork extends HTMLElement {\n  static {\n    customElements.define(\"neural-network\", this)\n  }\n\n  connectedCallback() {\n    window.addEventListener('load', function(e) {\n      const KnowledgeGraph = window.$graph()\n\n      const targetElement = document.querySelector('#neural-network')\n\n      const icons = {}\n\n      const vimIcon = new Image()\n      vimIcon.src = \"/images/vim-icon.png\"\n\n      icons['vim-plugin'] = vimIcon\n\n      KnowledgeGraph(document.querySelector(\"#neural-network\"))\n        .graphData(dataset)\n        .width(targetElement.offsetWidth)\n        .height(targetElement.offsetWidth)\n        .nodeCanvasObject(function(node, ctx) {\n        if (node.group == 1) {\n          const path = node.id;\n          const fontSize = 8;\n\n          const hierarchyNodes = path.split(\"/\");\n          const category = hierarchyNodes[0];\n          const label = hierarchyNodes[hierarchyNodes.length - 1];\n\n          // Rendering Text\n          ctx.font = `${fontSize}px Sans-Serif`;\n          const textWidth = ctx.measureText(label).width;\n          const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillStyle = 'black';\n          ctx.fillText(label, node.x, node.y + 12);\n\n          ctx.beginPath()\n          ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\"\n          ctx.roundRect(\n            node.x - textWidth / 2 - 6,\n            node.y + fontSize / 2 + 2,\n            textWidth + 12,\n            fontSize + 4,\n            5\n          );\n          ctx.fill()\n\n          const hasIcon = ['vim-plugin'].includes(category);\n          const size = 12;\n\n          // Rendering Circle\n          if (hasIcon) {\n            const img = icons[category];\n            ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n          } else {\n          const radius = size / 2;\n            ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\"\n            ctx.beginPath();\n            ctx.arc(node.x, node.y, radius, 0, 2 * Math.PI, false)\n            ctx.fill()\n          }\n\n          node.__bckgDimensions = bckgDimensions;\n        }\n\n        if (node.group == 2) {\n          const tagName = node.id;\n          const fontSize = 12;\n\n          const label = tagName;\n\n          // Rendering Text\n          ctx.font = `700 ${fontSize}px Sans-Serif`;\n          const textWidth = ctx.measureText(label).width;\n          const bckgDimensions = [textWidth * 1.2, fontSize].map(n => n + fontSize * 0.3); // some padding\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillStyle = 'black';\n          ctx.fillText(label, node.x, node.y);\n\n          const groupNodeWidth = textWidth + 20\n          const groupNodeHeight = fontSize + 10\n          ctx.beginPath()\n          ctx.fillStyle = \"rgb(128, 203, 196, 0.2)\"\n          ctx.roundRect(\n            node.x - groupNodeWidth / 2,\n            node.y - groupNodeHeight / 2,\n            groupNodeWidth,\n            groupNodeHeight,\n            10\n          );\n          ctx.fill()\n\n          node.__bckgDimensions = bckgDimensions;\n        }\n        })\n        .nodePointerAreaPaint(function(node, color, ctx) {\n          if (node.group == 1) {\n            const size = 12;\n            const radius = size / 2;\n            ctx.fillStyle = color\n            ctx.beginPath();\n            ctx.arc(node.x, node.y, radius, 0, 2 * Math.PI, false)\n            ctx.fill()\n          }\n\n          if (node.group == 2) {\n            const tagName = node.id;\n            const fontSize = 12;\n\n            const label = tagName;\n\n            const textWidth = ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2); // some padding\n            const groupNodeWidth = textWidth + 20\n            const groupNodeHeight = fontSize + 10\n\n            ctx.beginPath()\n            ctx.fillStyle = color\n            ctx.roundRect(\n              node.x - groupNodeWidth / 2,\n              node.y - groupNodeHeight / 2,\n              groupNodeWidth,\n              groupNodeHeight,\n              10\n            );\n            ctx.fill()\n          }\n        })\n        .onNodeClick(function(node, event) {\n          if (node.group == 1) {\n            const path = node.id\n            window.location.assign(\"/wiki/\" + path)\n          }\n        })\n\t\t})\n  }\n}\n"],
  "mappings": "MAAA,IAAAA,EAAA,CACE,MAAS,CACP,CACE,GAAM,oBACN,MAAS,CACX,EACA,CACE,GAAM,uBACN,MAAS,CACX,EACA,CACE,GAAM,2BACN,MAAS,CACX,EACA,CACE,GAAM,UACN,MAAS,CACX,EACA,CACE,GAAM,oBACN,MAAS,CACX,EACA,CACE,GAAM,oBACN,MAAS,CACX,EACA,CACE,GAAM,wBACN,MAAS,CACX,EACA,CACE,GAAM,WACN,MAAS,CACX,EACA,CACE,GAAM,MACN,MAAS,CACX,EACA,CACE,GAAM,WACN,MAAS,CACX,EACA,CACE,GAAM,yBACN,MAAS,CACX,EACA,CACE,GAAM,WACN,MAAS,CACX,EACA,CACE,GAAM,gCACN,MAAS,CACX,EACA,CACE,GAAM,UACN,MAAS,CACX,EACA,CACE,GAAM,aACN,MAAS,CACX,EACA,CACE,GAAM,iBACN,MAAS,CACX,EACA,CACE,GAAM,6BACN,MAAS,CACX,EACA,CACE,GAAM,qBACN,MAAS,CACX,EACA,CACE,GAAM,uBACN,MAAS,CACX,EACA,CACE,GAAM,yBACN,MAAS,CACX,EACA,CACE,GAAM,WACN,MAAS,CACX,EACA,CACE,GAAM,MACN,MAAS,CACX,EACA,CACE,GAAM,UACN,MAAS,CACX,EACA,CACE,GAAM,OACN,MAAS,CACX,EACA,CACE,GAAM,gCACN,MAAS,CACX,EACA,CACE,GAAM,SACN,MAAS,CACX,EACA,CACE,GAAM,YACN,MAAS,CACX,EACA,CACE,GAAM,aACN,MAAS,CACX,EACA,CACE,GAAM,4BACN,MAAS,CACX,EACA,CACE,GAAM,MACN,MAAS,CACX,EACA,CACE,GAAM,qCACN,MAAS,CACX,EACA,CACE,GAAM,0BACN,MAAS,CACX,EACA,CACE,GAAM,2BACN,MAAS,CACX,EACA,CACE,GAAM,uBACN,MAAS,CACX,EACA,CACE,GAAM,SACN,MAAS,CACX,EACA,CACE,GAAM,SACN,MAAS,CACX,EACA,CACE,GAAM,mBACN,MAAS,CACX,EACA,CACE,GAAM,WACN,MAAS,EACT,GAAM,mBACN,GAAM,iBACR,EACA,CACE,GAAM,gBACN,MAAS,EACT,GAAM,kBACN,GAAM,mBACR,EACA,CACE,GAAM,OACN,MAAS,EACT,GAAM,kBACN,GAAM,gBACR,EACA,CACE,GAAM,OACN,MAAS,EACT,GAAM,mBACN,GAAM,kBACR,EACA,CACE,GAAM,WACN,MAAS,EACT,GAAM,kBACN,GAAM,iBACR,CACF,EACA,MAAS,CACP,CACE,OAAU,WACV,OAAU,oBACV,MAAS,GACX,EACA,CACE,OAAU,gBACV,OAAU,uBACV,MAAS,GACX,EACA,CACE,OAAU,WACV,OAAU,UACV,MAAS,GACX,EACA,CACE,OAAU,UACV,OAAU,oBACV,MAAS,CACX,EACA,CACE,OAAU,UACV,OAAU,oBACV,MAAS,CACX,EACA,CACE,OAAU,UACV,OAAU,oBACV,MAAS,CACX,EACA,CACE,OAAU,WACV,OAAU,oBACV,MAAS,GACX,EACA,CACE,OAAU,oBACV,OAAU,wBACV,MAAS,CACX,EACA,CACE,OAAU,WACV,OAAU,wBACV,MAAS,GACX,EACA,CACE,OAAU,gBACV,OAAU,wBACV,MAAS,GACX,EACA,CACE,OAAU,OACV,OAAU,wBACV,MAAS,GACX,EACA,CACE,OAAU,WACV,OAAU,WACV,MAAS,GACX,EACA,CACE,OAAU,WACV,OAAU,wBACV,MAAS,CACX,EACA,CACE,OAAU,MACV,OAAU,WACV,MAAS,CACX,EACA,CACE,OAAU,WACV,OAAU,oBACV,MAAS,GACX,EACA,CACE,OAAU,oBACV,OAAU,yBACV,MAAS,CACX,EACA,CACE,OAAU,WACV,OAAU,2BACV,MAAS,CACX,EACA,CACE,OAAU,OACV,OAAU,gCACV,MAAS,GACX,EACA,CACE,OAAU,gCACV,OAAU,UACV,MAAS,CACX,EACA,CACE,OAAU,gCACV,OAAU,aACV,MAAS,CACX,EACA,CACE,OAAU,iBACV,OAAU,yBACV,MAAS,CACX,EACA,CACE,OAAU,iBACV,OAAU,6BACV,MAAS,CACX,EACA,CACE,OAAU,gBACV,OAAU,yBACV,MAAS,GACX,EACA,CACE,OAAU,yBACV,OAAU,aACV,MAAS,CACX,EACA,CACE,OAAU,yBACV,OAAU,6BACV,MAAS,CACX,EACA,CACE,OAAU,yBACV,OAAU,uBACV,MAAS,CACX,EACA,CACE,OAAU,yBACV,OAAU,qBACV,MAAS,CACX,EACA,CACE,OAAU,OACV,OAAU,WACV,MAAS,GACX,EACA,CACE,OAAU,OACV,OAAU,MACV,MAAS,GACX,EACA,CACE,OAAU,MACV,OAAU,WACV,MAAS,CACX,EACA,CACE,OAAU,MACV,OAAU,UACV,MAAS,CACX,EACA,CACE,OAAU,MACV,OAAU,OACV,MAAS,CACX,EACA,CACE,OAAU,MACV,OAAU,aACV,MAAS,CACX,EACA,CACE,OAAU,gCACV,OAAU,yBACV,MAAS,CACX,EACA,CACE,OAAU,gCACV,OAAU,SACV,MAAS,CACX,EACA,CACE,OAAU,gBACV,OAAU,YACV,MAAS,GACX,EACA,CACE,OAAU,YACV,OAAU,UACV,MAAS,CACX,EACA,CACE,OAAU,YACV,OAAU,SACV,MAAS,CACX,EACA,CACE,OAAU,YACV,OAAU,aACV,MAAS,CACX,EACA,CACE,OAAU,YACV,OAAU,aACV,MAAS,CACX,EACA,CACE,OAAU,YACV,OAAU,uBACV,MAAS,CACX,EACA,CACE,OAAU,OACV,OAAU,UACV,MAAS,GACX,EACA,CACE,OAAU,gBACV,OAAU,UACV,MAAS,GACX,EACA,CACE,OAAU,OACV,OAAU,6BACV,MAAS,GACX,EACA,CACE,OAAU,6BACV,OAAU,4BACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,MACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,SACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,gCACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,qCACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,0BACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,2BACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,uBACV,MAAS,CACX,EACA,CACE,OAAU,aACV,OAAU,6BACV,MAAS,CACX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",
  "names": ["wiki_datasets_default", "_NeuralNetwork", "e", "KnowledgeGraph", "targetElement", "icons", "vimIcon", "wiki_datasets_default", "node", "ctx", "path", "fontSize", "hierarchyNodes", "category", "label", "textWidth", "bckgDimensions", "n", "hasIcon", "size", "img", "radius", "tagName", "groupNodeWidth", "groupNodeHeight", "color", "event", "NeuralNetwork"]
}
